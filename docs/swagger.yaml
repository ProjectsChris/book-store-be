basePath: /api/v1
definitions:
  models.Book:
    properties:
      autore:
        example: Ruben Fabrizi
        maxLength: 64
        type: string
      categoria:
        example: New Releases
        type: string
      copertina:
        example: Hard Cover
        type: string
      genere:
        example: Romance
        type: string
      id:
        type: integer
      id_copertina:
        example: 564
        type: integer
      prezzo:
        example: 15.9
        type: number
      quantita:
        example: 2
        maximum: 5
        minimum: 1
        type: integer
      summary:
        example: Lorem Ipsum is simply dummy text of the printing and typesetting
          industry.
        maxLength: 512
        type: string
      titolo:
        example: Il silenzio di un mare in tempesta
        maxLength: 255
        type: string
    required:
    - autore
    - categoria
    - copertina
    - genere
    - id_copertina
    - prezzo
    - quantita
    - summary
    - titolo
    type: object
  responses.Response:
    properties:
      message:
        type: string
    type: object
host: 192.168.3.6:8000
info:
  contact:
    email: chrisd3v3l0p3r@gmail.com
    name: Chris Developer
  description: API for manages a book store
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Book Store API
  version: "1.0"
paths:
  /book:
    get:
      description: Shows all books.
      parameters:
      - description: id book
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Shows books
      tags:
      - Book
  /book/:
    post:
      consumes:
      - application/json
      description: |-
        For add new book, you must follow the following rules:
        <ul><li><b>titolo</b>: max 255 characters.</li>
        <li><b>autore</b>: max 64 characters.</li>
        <li><b>prezzo</b>: must be a float (e.g. 15.90).</li>
        <li><b>summary</b>: max 512 characters.</li>
        <li><b>copertina</b>: accepts: <i>Hard Cover</i>, <i>Flexible Cover</i>.</li>
        <li><b>genere</b>: accepts: <i>Action</i>, <i>Adventure</i>, <i>Business</i>, <i>Cookbooks</i>, <i>Drama</i>, <i>Detective</i>, <i>Fantasy</i>, <i>Fiction</i>, <i>History</i>, <i>Horror</i>, <i>Romance</i>, <i>Psychology</i>, <i>Science Fiction</i>, <i>Short Stories</i>, <i>Thriller</i>.</li>
        <li><b>quantita</b>: the value must be greater 1 and less then 5.</li>
        <li><b>categoria</b>: accepts: <i>Best Seller</i>, <i>New Releases</i>, <i>Best Offers.</i></li></ul>
      parameters:
      - description: Book
        in: body
        name: models.Book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Adds a book
      tags:
      - Book
  /book/{id}:
    delete:
      description: Removes a book with same id.
      parameters:
      - description: id book
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Removes a book
      tags:
      - Book
    get:
      consumes:
      - application/json
      description: Shows all details of a book.
      parameters:
      - description: id book
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Shows a book
      tags:
      - Book
    put:
      description: |-
        These are properties for update the book:
        <li><b>titolo</b>: max 255 characters.</li>
        <li><b>autore</b>: max 64 characters.</li>
        <li><b>prezzo</b>: must be a float (e.g. 15.90).</li>
        <li><b>summary</b>: max 512 characters.</li>
        <li><b>copertina</b>: accepts: <i>Hard Cover</i>, <i>Flexible Cover</i>.</li>
        <li><b>genere</b>: accepts: <i>Action</i>, <i>Adventure</i>, <i>Business</i>, <i>Cookbooks</i>, <i>Drama</i>, <i>Detective</i>, <i>Fantasy</i>, <i>Fiction</i>, <i>History</i>, <i>Horror</i>, <i>Romance</i>, <i>Psychology</i>, <i>Science Fiction</i>, <i>Short Stories</i>, <i>Thriller</i>.</li>
        <li><b>quantita</b>: the value must be greater 1 and less then 5.</li>
        <li><b>categoria</b>: accepts: <i>Best Seller</i>, <i>New Releases</i>, <i>Best Offers.</i></li>
      parameters:
      - description: id book
        in: path
        name: id
        required: true
        type: string
      - description: book
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Updates the book
      tags:
      - Book
swagger: "2.0"
