version: "3.8"

services:
  # Otel Collector
  otel-collector:
    image: 'otel/opentelemetry-collector:0.88.0'
    container_name: 'otel-collector'
    restart: 'always'
    command:
      - '--config=/etc/otel-collector-config.yaml'
    volumes:
      - './configuration/otel-collector-config.yaml:/etc/otel-collector-config.yaml'
    ports:
      - '1888:1888'   # pprof extension
      - '8888:8888'   # Prometheus metrics exposed by the collector
      - '8889:8889'   # Prometheus exporter metrics
      - '13133:13133' # health_check extension

  # Prometheus
  prometheus:
    image: 'prom/prometheus:v2.47.1'
    container_name: 'prometheus'
    restart: 'always'
    command:
      - '--config.file=/etc/prometheus.yaml'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=exemplar-storage'
    volumes:
      - './configuration/prometheus.yaml:/etc/prometheus.yaml'
    ports:
      - '9090:9090'

  # Grafana
  grafana:
    image: 'grafana/grafana:10.1.1'
    container_name: 'grafana'
    restart: 'always'
    volumes:
      - ./configuration/grafana/provisioning/datasources/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - '3000:3000'
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor

  # Grafana Tempo
  tempo:
    image: 'grafana/tempo:r119-fcd31bd'
    container_name: 'tempo'
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configuration/tempo.yaml:/etc/tempo.yaml
      - ./configuration/tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http

  # Keycloak
  keycloak:
    image: 'quay.io/keycloak/keycloak:22.0.4'
    container_name: 'keycloak'
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_DB=postgres
      - KC_DB_DRIVER=postgres
      - KC_DB_PASSWORD=postgres
      - KC_DB_USERNAME=postgres
      - KC_DB_URL_PORT=5432
      - KC_DB_URL_HOST=localhost
      - KC_DB_URL=jdbc:postgresql://192.168.3.6:5432/postgres
    ports:
      - '9000:8080'
    command: ['start-dev']
    restart: 'always'
    depends_on:
      - postgres

  # KrakenD
  kraken:
    image: 'devopsfaith/krakend:2.4'
    container_name: 'krakend'
    volumes:
      - ./configuration/krakend/krakend.json:/etc/krakend/krakend.json
    command: ['run', '-d', '-c', '/etc/krakend/krakend.json']
    ports:
      - '9100:8080'
    restart: 'always'

  # Postgresql
  postgres:
    image: postgres:16
    container_name: 'postgres'
    restart: 'always'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./.data/psqlinfo:/var/lib/postgresql/data
