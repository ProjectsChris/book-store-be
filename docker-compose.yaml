version: "3.8"

services:
  # Book Store Backend
  book-store-be:
    container_name: 'book-store-be_gin'
    build: .
    ports:
      - '8000:8000'

  # Jaeger All In One
  jaeger-all-in-one:
    image: 'jaegertracing/all-in-one:1'
    container_name: 'book-store-be_jaeger-all-in-one'
    restart: 'always'
    ports:
      - '16686:16686'
      - '14268'
      - '14250'

  # Otel Collector
  otel-collector:
    image: 'otel/opentelemetry-collector-contrib:0.68.0'
    container_name: 'book-store-be_otel-collector'
    restart: 'always'
    command:
      - '--config=/etc/otel-collector-config.yaml'
    volumes:
      - './configuration/otel-collector-config.yaml:/etc/otel-collector-config.yaml'
    ports:
      - '1888:1888'   # pprof extension
      - '8888:8888'   # Prometheus metrics exposed by the collector
      - '8889:8889'   # Prometheus exporter metrics
      - '13133:13133' # health_check extension
      - '4317:4317'   # OTLP gRPC receivers
    depends_on:
      - jaeger-all-in-one
      - prometheus

  # Prometheus
  prometheus:
    image: 'prom/prometheus:v2.47.1'
    container_name: 'book-store-be_prometheus'
    restart: 'always'
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    volumes:
      - './configuration/prometheus.yaml:/etc/prometheus/prometheus.yaml'
    ports:
      - '9090:9090'

  # Grafana
  grafana:
    image: 'grafana/grafana:9.0.1'
    container_name: 'book-store-be_grafana'
    restart: 'always'
    volumes:
      - ./configuration/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./configuration/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - '3000:3000'

  # Keycloak
  keycloak:
    image: 'quay.io/keycloak/keycloak:22.0.4'
    container_name: 'book-store-be_keycloak'
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_DB=postgres
      - KC_DB_DRIVER=postgres
      - KC_DB_PASSWORD=postgres
      - KC_DB_USERNAME=postgres
      - KC_DB_URL_PORT=5432
      - KC_DB_URL_HOST=localhost
      - KC_DB_URL=jdbc:postgresql://192.168.3.6:5432/postgres
    ports:
      - '9000:8080'
    command: ['start-dev']
    restart: 'always'
    depends_on:
      - postgres

  # KrakenD
  kraken:
    image: 'devopsfaith/krakend:2.4'
    container_name: 'book-store-be_krakend'
    volumes:
      - ./configuration/krakend/krakend.json:/etc/krakend/krakend.json
    command: ['run', '-d', '-c', '/etc/krakend/krakend.json']
    ports:
      - '9100:8080'
    restart: 'always'

  # Postgresql
  postgres:
    image: postgres:16
    container_name: 'book-store-be_postgres'
    restart: 'always'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./.data/psqlinfo:/var/lib/postgresql/data
